{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8089/api';// Create Axios instance\nconst api=axios.create({baseURL:API_BASE_URL,timeout:10000,headers:{'Content-Type':'application/json'}});// Request interceptor to add JWT token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>Promise.reject(error));// Response interceptor for logging\napi.interceptors.response.use(response=>response,error=>{var _error$response;console.error('API Error:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);return Promise.reject(error);});// Auth API\nexport const authAPI={login:(email,password)=>api.post('/auth/login',{email,password}),register:(email,password)=>api.post('/auth/register',{email,password})};// Blog API\nexport const blogAPI={getBlogs:function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;return api.get(\"/blogs?page=\".concat(page,\"&size=\").concat(size));},getBlog:id=>api.get(\"/blogs/\".concat(id)),createBlog:(title,content)=>{if(!title||!content){return Promise.reject({message:'Title and content are required'});}return api.post('/blogs',{title,content});},updateBlog:(id,title,content)=>{if(!title||!content){return Promise.reject({message:'Title and content are required'});}return api.put(\"/blogs/\".concat(id),{title,content});},deleteBlog:id=>api.delete(\"/blogs/\".concat(id))};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","console","data","message","authAPI","login","email","password","post","register","blogAPI","getBlogs","page","arguments","length","undefined","size","get","getBlog","id","createBlog","title","content","updateBlog","put","deleteBlog","delete"],"sources":["C:/Users/vishnu/OneDrive/Learnthon 2024/blog/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8089/api';\n\n\n// Create Axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add JWT token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Response interceptor for logging\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', { email, password }),\n  register: (email, password) => api.post('/auth/register', { email, password }),\n};\n\n// Blog API\nexport const blogAPI = {\n  getBlogs: (page = 0, size = 10) => api.get(`/blogs?page=${page}&size=${size}`),\n  getBlog: (id) => api.get(`/blogs/${id}`),\n  \n  createBlog: (title, content) => {\n    if (!title || !content) {\n      return Promise.reject({ message: 'Title and content are required' });\n    }\n    return api.post('/blogs', { title, content });\n  },\n\n  updateBlog: (id, title, content) => {\n    if (!title || !content) {\n      return Promise.reject({ message: 'Title and content are required' });\n    }\n    return api.put(`/blogs/${id}`, { title, content });\n  },\n\n  deleteBlog: (id) => api.delete(`/blogs/${id}`),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}