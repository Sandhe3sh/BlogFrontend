{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  register: (email, password) => api.post('/auth/register', {\n    email,\n    password\n  })\n};\nexport const blogAPI = {\n  getBlogs: (page = 0, size = 10) => api.get(`/blogs?page=${page}&size=${size}`),\n  getBlog: id => api.get(`/blogs/${id}`),\n  createBlog: (title, content) => api.post('/blogs', {\n    title,\n    content\n  }),\n  updateBlog: (id, title, content) => api.put(`/blogs/${id}`, {\n    title,\n    content\n  }),\n  deleteBlog: id => api.delete(`/blogs/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","authAPI","login","email","password","post","register","blogAPI","getBlogs","page","size","get","getBlog","id","createBlog","title","content","updateBlog","put","deleteBlog","delete"],"sources":["C:/Users/vishnu/OneDrive/Learnthon 2024/blog/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8080/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', { email, password }),\n  register: (email, password) => api.post('/auth/register', { email, password }),\n};\n\nexport const blogAPI = {\n  getBlogs: (page = 0, size = 10) => api.get(`/blogs?page=${page}&size=${size}`),\n  getBlog: (id) => api.get(`/blogs/${id}`),\n  createBlog: (title, content) => api.post('/blogs', { title, content }),\n  updateBlog: (id, title, content) => api.put(`/blogs/${id}`, { title, content }),\n  deleteBlog: (id) => api.delete(`/blogs/${id}`),\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEFC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMM,OAAO,GAAG;EACrBC,KAAK,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAKf,GAAG,CAACgB,IAAI,CAAC,aAAa,EAAE;IAAEF,KAAK;IAAEC;EAAS,CAAC,CAAC;EACxEE,QAAQ,EAAEA,CAACH,KAAK,EAAEC,QAAQ,KAAKf,GAAG,CAACgB,IAAI,CAAC,gBAAgB,EAAE;IAAEF,KAAK;IAAEC;EAAS,CAAC;AAC/E,CAAC;AAED,OAAO,MAAMG,OAAO,GAAG;EACrBC,QAAQ,EAAEA,CAACC,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,KAAKrB,GAAG,CAACsB,GAAG,CAAC,eAAeF,IAAI,SAASC,IAAI,EAAE,CAAC;EAC9EE,OAAO,EAAGC,EAAE,IAAKxB,GAAG,CAACsB,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;EACxCC,UAAU,EAAEA,CAACC,KAAK,EAAEC,OAAO,KAAK3B,GAAG,CAACgB,IAAI,CAAC,QAAQ,EAAE;IAAEU,KAAK;IAAEC;EAAQ,CAAC,CAAC;EACtEC,UAAU,EAAEA,CAACJ,EAAE,EAAEE,KAAK,EAAEC,OAAO,KAAK3B,GAAG,CAAC6B,GAAG,CAAC,UAAUL,EAAE,EAAE,EAAE;IAAEE,KAAK;IAAEC;EAAQ,CAAC,CAAC;EAC/EG,UAAU,EAAGN,EAAE,IAAKxB,GAAG,CAAC+B,MAAM,CAAC,UAAUP,EAAE,EAAE;AAC/C,CAAC;AAED,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}